#!/usr/bin/perl

use v5.14;
use strict;
use Getopt::Long;
use Pod::Usage;

my $help = !!0;
my $logs = 'pcrd.log';
GetOptions(
	'h|help' => \$help,
	'logs=s' => \$logs,
) or pod2usage(2);

pod2usage(-exitval => 0, -verbose => 2, -noperldoc => 1) if $help;

sub run_query
{
	my ($module, $feature, $value) = @_;

	require PCRD::Client;
	require IO::Async::Loop;
	my $loop = IO::Async::Loop->new;
	my $client = PCRD::Client->new(
		on_message => sub {
			my ($ok, $result) = @_;
			$loop->stop;

			die "failed to execute: $result\n"
				unless $ok;
			say $result;
		},
	);

	$loop->add(
		$client->client
	);

	$client->send($module, $feature, $value);
	$loop->run;
}

sub run_daemon
{
	my ($daemon) = @_;

	if ($daemon) {
		my $forked = fork;
		die "could not fork" unless defined $forked;
		exit if $forked;

		require POSIX;
		POSIX::setsid() != -1 or die "Can't start a new session: $!";
		$0 = 'pcrd';
		open STDOUT, '>', $logs;
		open STDERR, '>&', STDOUT;
		chdir '/';
	}

	require PCRD;
	my $daemon = PCRD->new;
	$daemon->start;
}

my $action = shift;

if ($action eq 'query') {
	my ($module, $feature, $value) = @ARGV;
	run_query($module, $feature, $value);
}
elsif ($action eq 'run') {
	my $arg = shift;
	run_daemon($arg && $arg eq 'daemon');
}
elsif ($action eq 'init') {
	require PCRD;
	PCRD->new(load_config => !!0)->dump_config;
	say 'initialized';
}
elsif ($action eq 'config') {
	require PCRD;
	say PCRD->new->explain_config;
}

__END__

=head1 NAME

pcrctl - Control program for Parameters Control and Reporting Daemon

=head1 SYNOPSIS

pcrctl [options] [action]

	Options:
		--help                          show help
		--logs FILE                     where to put daemon logs

	Actions:
		run [daemon]                    runs the program loop
		init                            initializes the configuration file
		config                          shows possible configuration values
		query MODULE FEATURE [VALUE]    queries one of the daemon's features

=head1 OPTIONS

=over

=item B<--help>

Print a brief help message and exits.

=back

=head1 ACTIONS

=over

=item B<run>

Runs the program. It will run until stopped. If C<daemon> is included, it will
run in the background.

=item B<init>

Initializes the configuration file, commonly found under C<~/.pcrd>. Will not
overwrite existing configuration.

=item B<config>

Show a complete list of configuration values for enabled modules.

=item B<query>

Runs a query to the daemon, setting or getting one of the values. C<MODULE> and
C<FEATURE> configs are required, existence of C<VALUE> controls whether the
setting or getting is performed.

=back

=head1 DESCRIPTION

This program is a pcrd (Parameters Control and Reporting Daemon) control tool.
It can be used to manage pcrd instance and query its modules.

